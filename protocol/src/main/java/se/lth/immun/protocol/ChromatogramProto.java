// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: panther.proto

package se.lth.immun.protocol;

public final class ChromatogramProto {
  private ChromatogramProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface BoundsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:se.lth.immun.protocol.Bounds)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional double lmz = 1;</code>
     */
    boolean hasLmz();
    /**
     * <code>optional double lmz = 1;</code>
     */
    double getLmz();

    /**
     * <code>optional double hmz = 2;</code>
     */
    boolean hasHmz();
    /**
     * <code>optional double hmz = 2;</code>
     */
    double getHmz();
  }
  /**
   * Protobuf type {@code se.lth.immun.protocol.Bounds}
   */
  public static final class Bounds extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:se.lth.immun.protocol.Bounds)
      BoundsOrBuilder {
    // Use Bounds.newBuilder() to construct.
    private Bounds(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Bounds(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Bounds defaultInstance;
    public static Bounds getDefaultInstance() {
      return defaultInstance;
    }

    public Bounds getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Bounds(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              lmz_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              hmz_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_Bounds_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_Bounds_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              se.lth.immun.protocol.ChromatogramProto.Bounds.class, se.lth.immun.protocol.ChromatogramProto.Bounds.Builder.class);
    }

    public static com.google.protobuf.Parser<Bounds> PARSER =
        new com.google.protobuf.AbstractParser<Bounds>() {
      public Bounds parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Bounds(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Bounds> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int LMZ_FIELD_NUMBER = 1;
    private double lmz_;
    /**
     * <code>optional double lmz = 1;</code>
     */
    public boolean hasLmz() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional double lmz = 1;</code>
     */
    public double getLmz() {
      return lmz_;
    }

    public static final int HMZ_FIELD_NUMBER = 2;
    private double hmz_;
    /**
     * <code>optional double hmz = 2;</code>
     */
    public boolean hasHmz() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional double hmz = 2;</code>
     */
    public double getHmz() {
      return hmz_;
    }

    private void initFields() {
      lmz_ = 0D;
      hmz_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, lmz_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, hmz_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, lmz_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, hmz_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static se.lth.immun.protocol.ChromatogramProto.Bounds parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static se.lth.immun.protocol.ChromatogramProto.Bounds parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.Bounds parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static se.lth.immun.protocol.ChromatogramProto.Bounds parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.Bounds parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static se.lth.immun.protocol.ChromatogramProto.Bounds parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.Bounds parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static se.lth.immun.protocol.ChromatogramProto.Bounds parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.Bounds parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static se.lth.immun.protocol.ChromatogramProto.Bounds parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.lth.immun.protocol.ChromatogramProto.Bounds prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code se.lth.immun.protocol.Bounds}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:se.lth.immun.protocol.Bounds)
        se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_Bounds_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_Bounds_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                se.lth.immun.protocol.ChromatogramProto.Bounds.class, se.lth.immun.protocol.ChromatogramProto.Bounds.Builder.class);
      }

      // Construct using se.lth.immun.protocol.ChromatogramProto.Bounds.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        lmz_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        hmz_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_Bounds_descriptor;
      }

      public se.lth.immun.protocol.ChromatogramProto.Bounds getDefaultInstanceForType() {
        return se.lth.immun.protocol.ChromatogramProto.Bounds.getDefaultInstance();
      }

      public se.lth.immun.protocol.ChromatogramProto.Bounds build() {
        se.lth.immun.protocol.ChromatogramProto.Bounds result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public se.lth.immun.protocol.ChromatogramProto.Bounds buildPartial() {
        se.lth.immun.protocol.ChromatogramProto.Bounds result = new se.lth.immun.protocol.ChromatogramProto.Bounds(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.lmz_ = lmz_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.hmz_ = hmz_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.lth.immun.protocol.ChromatogramProto.Bounds) {
          return mergeFrom((se.lth.immun.protocol.ChromatogramProto.Bounds)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(se.lth.immun.protocol.ChromatogramProto.Bounds other) {
        if (other == se.lth.immun.protocol.ChromatogramProto.Bounds.getDefaultInstance()) return this;
        if (other.hasLmz()) {
          setLmz(other.getLmz());
        }
        if (other.hasHmz()) {
          setHmz(other.getHmz());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        se.lth.immun.protocol.ChromatogramProto.Bounds parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (se.lth.immun.protocol.ChromatogramProto.Bounds) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double lmz_ ;
      /**
       * <code>optional double lmz = 1;</code>
       */
      public boolean hasLmz() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional double lmz = 1;</code>
       */
      public double getLmz() {
        return lmz_;
      }
      /**
       * <code>optional double lmz = 1;</code>
       */
      public Builder setLmz(double value) {
        bitField0_ |= 0x00000001;
        lmz_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double lmz = 1;</code>
       */
      public Builder clearLmz() {
        bitField0_ = (bitField0_ & ~0x00000001);
        lmz_ = 0D;
        onChanged();
        return this;
      }

      private double hmz_ ;
      /**
       * <code>optional double hmz = 2;</code>
       */
      public boolean hasHmz() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional double hmz = 2;</code>
       */
      public double getHmz() {
        return hmz_;
      }
      /**
       * <code>optional double hmz = 2;</code>
       */
      public Builder setHmz(double value) {
        bitField0_ |= 0x00000002;
        hmz_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double hmz = 2;</code>
       */
      public Builder clearHmz() {
        bitField0_ = (bitField0_ & ~0x00000002);
        hmz_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:se.lth.immun.protocol.Bounds)
    }

    static {
      defaultInstance = new Bounds(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:se.lth.immun.protocol.Bounds)
  }

  public interface FragmentBoundsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:se.lth.immun.protocol.FragmentBounds)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
     */
    boolean hasPrecursor();
    /**
     * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
     */
    se.lth.immun.protocol.ChromatogramProto.Bounds getPrecursor();
    /**
     * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
     */
    se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder getPrecursorOrBuilder();

    /**
     * <code>optional .se.lth.immun.protocol.Bounds fragment = 2;</code>
     */
    boolean hasFragment();
    /**
     * <code>optional .se.lth.immun.protocol.Bounds fragment = 2;</code>
     */
    se.lth.immun.protocol.ChromatogramProto.Bounds getFragment();
    /**
     * <code>optional .se.lth.immun.protocol.Bounds fragment = 2;</code>
     */
    se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder getFragmentOrBuilder();
  }
  /**
   * Protobuf type {@code se.lth.immun.protocol.FragmentBounds}
   */
  public static final class FragmentBounds extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:se.lth.immun.protocol.FragmentBounds)
      FragmentBoundsOrBuilder {
    // Use FragmentBounds.newBuilder() to construct.
    private FragmentBounds(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FragmentBounds(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FragmentBounds defaultInstance;
    public static FragmentBounds getDefaultInstance() {
      return defaultInstance;
    }

    public FragmentBounds getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FragmentBounds(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              se.lth.immun.protocol.ChromatogramProto.Bounds.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = precursor_.toBuilder();
              }
              precursor_ = input.readMessage(se.lth.immun.protocol.ChromatogramProto.Bounds.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(precursor_);
                precursor_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              se.lth.immun.protocol.ChromatogramProto.Bounds.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = fragment_.toBuilder();
              }
              fragment_ = input.readMessage(se.lth.immun.protocol.ChromatogramProto.Bounds.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fragment_);
                fragment_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_FragmentBounds_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_FragmentBounds_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              se.lth.immun.protocol.ChromatogramProto.FragmentBounds.class, se.lth.immun.protocol.ChromatogramProto.FragmentBounds.Builder.class);
    }

    public static com.google.protobuf.Parser<FragmentBounds> PARSER =
        new com.google.protobuf.AbstractParser<FragmentBounds>() {
      public FragmentBounds parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FragmentBounds(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FragmentBounds> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PRECURSOR_FIELD_NUMBER = 1;
    private se.lth.immun.protocol.ChromatogramProto.Bounds precursor_;
    /**
     * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
     */
    public boolean hasPrecursor() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
     */
    public se.lth.immun.protocol.ChromatogramProto.Bounds getPrecursor() {
      return precursor_;
    }
    /**
     * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
     */
    public se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder getPrecursorOrBuilder() {
      return precursor_;
    }

    public static final int FRAGMENT_FIELD_NUMBER = 2;
    private se.lth.immun.protocol.ChromatogramProto.Bounds fragment_;
    /**
     * <code>optional .se.lth.immun.protocol.Bounds fragment = 2;</code>
     */
    public boolean hasFragment() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .se.lth.immun.protocol.Bounds fragment = 2;</code>
     */
    public se.lth.immun.protocol.ChromatogramProto.Bounds getFragment() {
      return fragment_;
    }
    /**
     * <code>optional .se.lth.immun.protocol.Bounds fragment = 2;</code>
     */
    public se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder getFragmentOrBuilder() {
      return fragment_;
    }

    private void initFields() {
      precursor_ = se.lth.immun.protocol.ChromatogramProto.Bounds.getDefaultInstance();
      fragment_ = se.lth.immun.protocol.ChromatogramProto.Bounds.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, precursor_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, fragment_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, precursor_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, fragment_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static se.lth.immun.protocol.ChromatogramProto.FragmentBounds parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static se.lth.immun.protocol.ChromatogramProto.FragmentBounds parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.FragmentBounds parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static se.lth.immun.protocol.ChromatogramProto.FragmentBounds parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.FragmentBounds parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static se.lth.immun.protocol.ChromatogramProto.FragmentBounds parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.FragmentBounds parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static se.lth.immun.protocol.ChromatogramProto.FragmentBounds parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.FragmentBounds parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static se.lth.immun.protocol.ChromatogramProto.FragmentBounds parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.lth.immun.protocol.ChromatogramProto.FragmentBounds prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code se.lth.immun.protocol.FragmentBounds}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:se.lth.immun.protocol.FragmentBounds)
        se.lth.immun.protocol.ChromatogramProto.FragmentBoundsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_FragmentBounds_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_FragmentBounds_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                se.lth.immun.protocol.ChromatogramProto.FragmentBounds.class, se.lth.immun.protocol.ChromatogramProto.FragmentBounds.Builder.class);
      }

      // Construct using se.lth.immun.protocol.ChromatogramProto.FragmentBounds.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPrecursorFieldBuilder();
          getFragmentFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (precursorBuilder_ == null) {
          precursor_ = se.lth.immun.protocol.ChromatogramProto.Bounds.getDefaultInstance();
        } else {
          precursorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (fragmentBuilder_ == null) {
          fragment_ = se.lth.immun.protocol.ChromatogramProto.Bounds.getDefaultInstance();
        } else {
          fragmentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_FragmentBounds_descriptor;
      }

      public se.lth.immun.protocol.ChromatogramProto.FragmentBounds getDefaultInstanceForType() {
        return se.lth.immun.protocol.ChromatogramProto.FragmentBounds.getDefaultInstance();
      }

      public se.lth.immun.protocol.ChromatogramProto.FragmentBounds build() {
        se.lth.immun.protocol.ChromatogramProto.FragmentBounds result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public se.lth.immun.protocol.ChromatogramProto.FragmentBounds buildPartial() {
        se.lth.immun.protocol.ChromatogramProto.FragmentBounds result = new se.lth.immun.protocol.ChromatogramProto.FragmentBounds(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (precursorBuilder_ == null) {
          result.precursor_ = precursor_;
        } else {
          result.precursor_ = precursorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (fragmentBuilder_ == null) {
          result.fragment_ = fragment_;
        } else {
          result.fragment_ = fragmentBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.lth.immun.protocol.ChromatogramProto.FragmentBounds) {
          return mergeFrom((se.lth.immun.protocol.ChromatogramProto.FragmentBounds)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(se.lth.immun.protocol.ChromatogramProto.FragmentBounds other) {
        if (other == se.lth.immun.protocol.ChromatogramProto.FragmentBounds.getDefaultInstance()) return this;
        if (other.hasPrecursor()) {
          mergePrecursor(other.getPrecursor());
        }
        if (other.hasFragment()) {
          mergeFragment(other.getFragment());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        se.lth.immun.protocol.ChromatogramProto.FragmentBounds parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (se.lth.immun.protocol.ChromatogramProto.FragmentBounds) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private se.lth.immun.protocol.ChromatogramProto.Bounds precursor_ = se.lth.immun.protocol.ChromatogramProto.Bounds.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          se.lth.immun.protocol.ChromatogramProto.Bounds, se.lth.immun.protocol.ChromatogramProto.Bounds.Builder, se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder> precursorBuilder_;
      /**
       * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
       */
      public boolean hasPrecursor() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.Bounds getPrecursor() {
        if (precursorBuilder_ == null) {
          return precursor_;
        } else {
          return precursorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
       */
      public Builder setPrecursor(se.lth.immun.protocol.ChromatogramProto.Bounds value) {
        if (precursorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          precursor_ = value;
          onChanged();
        } else {
          precursorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
       */
      public Builder setPrecursor(
          se.lth.immun.protocol.ChromatogramProto.Bounds.Builder builderForValue) {
        if (precursorBuilder_ == null) {
          precursor_ = builderForValue.build();
          onChanged();
        } else {
          precursorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
       */
      public Builder mergePrecursor(se.lth.immun.protocol.ChromatogramProto.Bounds value) {
        if (precursorBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              precursor_ != se.lth.immun.protocol.ChromatogramProto.Bounds.getDefaultInstance()) {
            precursor_ =
              se.lth.immun.protocol.ChromatogramProto.Bounds.newBuilder(precursor_).mergeFrom(value).buildPartial();
          } else {
            precursor_ = value;
          }
          onChanged();
        } else {
          precursorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
       */
      public Builder clearPrecursor() {
        if (precursorBuilder_ == null) {
          precursor_ = se.lth.immun.protocol.ChromatogramProto.Bounds.getDefaultInstance();
          onChanged();
        } else {
          precursorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.Bounds.Builder getPrecursorBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPrecursorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder getPrecursorOrBuilder() {
        if (precursorBuilder_ != null) {
          return precursorBuilder_.getMessageOrBuilder();
        } else {
          return precursor_;
        }
      }
      /**
       * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          se.lth.immun.protocol.ChromatogramProto.Bounds, se.lth.immun.protocol.ChromatogramProto.Bounds.Builder, se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder> 
          getPrecursorFieldBuilder() {
        if (precursorBuilder_ == null) {
          precursorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              se.lth.immun.protocol.ChromatogramProto.Bounds, se.lth.immun.protocol.ChromatogramProto.Bounds.Builder, se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder>(
                  getPrecursor(),
                  getParentForChildren(),
                  isClean());
          precursor_ = null;
        }
        return precursorBuilder_;
      }

      private se.lth.immun.protocol.ChromatogramProto.Bounds fragment_ = se.lth.immun.protocol.ChromatogramProto.Bounds.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          se.lth.immun.protocol.ChromatogramProto.Bounds, se.lth.immun.protocol.ChromatogramProto.Bounds.Builder, se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder> fragmentBuilder_;
      /**
       * <code>optional .se.lth.immun.protocol.Bounds fragment = 2;</code>
       */
      public boolean hasFragment() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .se.lth.immun.protocol.Bounds fragment = 2;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.Bounds getFragment() {
        if (fragmentBuilder_ == null) {
          return fragment_;
        } else {
          return fragmentBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .se.lth.immun.protocol.Bounds fragment = 2;</code>
       */
      public Builder setFragment(se.lth.immun.protocol.ChromatogramProto.Bounds value) {
        if (fragmentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fragment_ = value;
          onChanged();
        } else {
          fragmentBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .se.lth.immun.protocol.Bounds fragment = 2;</code>
       */
      public Builder setFragment(
          se.lth.immun.protocol.ChromatogramProto.Bounds.Builder builderForValue) {
        if (fragmentBuilder_ == null) {
          fragment_ = builderForValue.build();
          onChanged();
        } else {
          fragmentBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .se.lth.immun.protocol.Bounds fragment = 2;</code>
       */
      public Builder mergeFragment(se.lth.immun.protocol.ChromatogramProto.Bounds value) {
        if (fragmentBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              fragment_ != se.lth.immun.protocol.ChromatogramProto.Bounds.getDefaultInstance()) {
            fragment_ =
              se.lth.immun.protocol.ChromatogramProto.Bounds.newBuilder(fragment_).mergeFrom(value).buildPartial();
          } else {
            fragment_ = value;
          }
          onChanged();
        } else {
          fragmentBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .se.lth.immun.protocol.Bounds fragment = 2;</code>
       */
      public Builder clearFragment() {
        if (fragmentBuilder_ == null) {
          fragment_ = se.lth.immun.protocol.ChromatogramProto.Bounds.getDefaultInstance();
          onChanged();
        } else {
          fragmentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .se.lth.immun.protocol.Bounds fragment = 2;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.Bounds.Builder getFragmentBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getFragmentFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .se.lth.immun.protocol.Bounds fragment = 2;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder getFragmentOrBuilder() {
        if (fragmentBuilder_ != null) {
          return fragmentBuilder_.getMessageOrBuilder();
        } else {
          return fragment_;
        }
      }
      /**
       * <code>optional .se.lth.immun.protocol.Bounds fragment = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          se.lth.immun.protocol.ChromatogramProto.Bounds, se.lth.immun.protocol.ChromatogramProto.Bounds.Builder, se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder> 
          getFragmentFieldBuilder() {
        if (fragmentBuilder_ == null) {
          fragmentBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              se.lth.immun.protocol.ChromatogramProto.Bounds, se.lth.immun.protocol.ChromatogramProto.Bounds.Builder, se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder>(
                  getFragment(),
                  getParentForChildren(),
                  isClean());
          fragment_ = null;
        }
        return fragmentBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:se.lth.immun.protocol.FragmentBounds)
    }

    static {
      defaultInstance = new FragmentBounds(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:se.lth.immun.protocol.FragmentBounds)
  }

  public interface SendCoordinatesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:se.lth.immun.protocol.SendCoordinates)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 1;</code>
     */
    int getId();

    /**
     * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
     */
    java.util.List<se.lth.immun.protocol.ChromatogramProto.Bounds> 
        getPrecursorList();
    /**
     * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
     */
    se.lth.immun.protocol.ChromatogramProto.Bounds getPrecursor(int index);
    /**
     * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
     */
    int getPrecursorCount();
    /**
     * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
     */
    java.util.List<? extends se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder> 
        getPrecursorOrBuilderList();
    /**
     * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
     */
    se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder getPrecursorOrBuilder(
        int index);

    /**
     * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
     */
    java.util.List<se.lth.immun.protocol.ChromatogramProto.FragmentBounds> 
        getFragmentList();
    /**
     * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
     */
    se.lth.immun.protocol.ChromatogramProto.FragmentBounds getFragment(int index);
    /**
     * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
     */
    int getFragmentCount();
    /**
     * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
     */
    java.util.List<? extends se.lth.immun.protocol.ChromatogramProto.FragmentBoundsOrBuilder> 
        getFragmentOrBuilderList();
    /**
     * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
     */
    se.lth.immun.protocol.ChromatogramProto.FragmentBoundsOrBuilder getFragmentOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code se.lth.immun.protocol.SendCoordinates}
   */
  public static final class SendCoordinates extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:se.lth.immun.protocol.SendCoordinates)
      SendCoordinatesOrBuilder {
    // Use SendCoordinates.newBuilder() to construct.
    private SendCoordinates(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SendCoordinates(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SendCoordinates defaultInstance;
    public static SendCoordinates getDefaultInstance() {
      return defaultInstance;
    }

    public SendCoordinates getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SendCoordinates(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                precursor_ = new java.util.ArrayList<se.lth.immun.protocol.ChromatogramProto.Bounds>();
                mutable_bitField0_ |= 0x00000002;
              }
              precursor_.add(input.readMessage(se.lth.immun.protocol.ChromatogramProto.Bounds.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                fragment_ = new java.util.ArrayList<se.lth.immun.protocol.ChromatogramProto.FragmentBounds>();
                mutable_bitField0_ |= 0x00000004;
              }
              fragment_.add(input.readMessage(se.lth.immun.protocol.ChromatogramProto.FragmentBounds.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          precursor_ = java.util.Collections.unmodifiableList(precursor_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          fragment_ = java.util.Collections.unmodifiableList(fragment_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_SendCoordinates_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_SendCoordinates_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              se.lth.immun.protocol.ChromatogramProto.SendCoordinates.class, se.lth.immun.protocol.ChromatogramProto.SendCoordinates.Builder.class);
    }

    public static com.google.protobuf.Parser<SendCoordinates> PARSER =
        new com.google.protobuf.AbstractParser<SendCoordinates>() {
      public SendCoordinates parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SendCoordinates(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SendCoordinates> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional int32 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int PRECURSOR_FIELD_NUMBER = 2;
    private java.util.List<se.lth.immun.protocol.ChromatogramProto.Bounds> precursor_;
    /**
     * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
     */
    public java.util.List<se.lth.immun.protocol.ChromatogramProto.Bounds> getPrecursorList() {
      return precursor_;
    }
    /**
     * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
     */
    public java.util.List<? extends se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder> 
        getPrecursorOrBuilderList() {
      return precursor_;
    }
    /**
     * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
     */
    public int getPrecursorCount() {
      return precursor_.size();
    }
    /**
     * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
     */
    public se.lth.immun.protocol.ChromatogramProto.Bounds getPrecursor(int index) {
      return precursor_.get(index);
    }
    /**
     * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
     */
    public se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder getPrecursorOrBuilder(
        int index) {
      return precursor_.get(index);
    }

    public static final int FRAGMENT_FIELD_NUMBER = 3;
    private java.util.List<se.lth.immun.protocol.ChromatogramProto.FragmentBounds> fragment_;
    /**
     * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
     */
    public java.util.List<se.lth.immun.protocol.ChromatogramProto.FragmentBounds> getFragmentList() {
      return fragment_;
    }
    /**
     * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
     */
    public java.util.List<? extends se.lth.immun.protocol.ChromatogramProto.FragmentBoundsOrBuilder> 
        getFragmentOrBuilderList() {
      return fragment_;
    }
    /**
     * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
     */
    public int getFragmentCount() {
      return fragment_.size();
    }
    /**
     * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
     */
    public se.lth.immun.protocol.ChromatogramProto.FragmentBounds getFragment(int index) {
      return fragment_.get(index);
    }
    /**
     * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
     */
    public se.lth.immun.protocol.ChromatogramProto.FragmentBoundsOrBuilder getFragmentOrBuilder(
        int index) {
      return fragment_.get(index);
    }

    private void initFields() {
      id_ = 0;
      precursor_ = java.util.Collections.emptyList();
      fragment_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      for (int i = 0; i < precursor_.size(); i++) {
        output.writeMessage(2, precursor_.get(i));
      }
      for (int i = 0; i < fragment_.size(); i++) {
        output.writeMessage(3, fragment_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      for (int i = 0; i < precursor_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, precursor_.get(i));
      }
      for (int i = 0; i < fragment_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, fragment_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static se.lth.immun.protocol.ChromatogramProto.SendCoordinates parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static se.lth.immun.protocol.ChromatogramProto.SendCoordinates parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.SendCoordinates parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static se.lth.immun.protocol.ChromatogramProto.SendCoordinates parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.SendCoordinates parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static se.lth.immun.protocol.ChromatogramProto.SendCoordinates parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.SendCoordinates parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static se.lth.immun.protocol.ChromatogramProto.SendCoordinates parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.SendCoordinates parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static se.lth.immun.protocol.ChromatogramProto.SendCoordinates parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.lth.immun.protocol.ChromatogramProto.SendCoordinates prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code se.lth.immun.protocol.SendCoordinates}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:se.lth.immun.protocol.SendCoordinates)
        se.lth.immun.protocol.ChromatogramProto.SendCoordinatesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_SendCoordinates_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_SendCoordinates_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                se.lth.immun.protocol.ChromatogramProto.SendCoordinates.class, se.lth.immun.protocol.ChromatogramProto.SendCoordinates.Builder.class);
      }

      // Construct using se.lth.immun.protocol.ChromatogramProto.SendCoordinates.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPrecursorFieldBuilder();
          getFragmentFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (precursorBuilder_ == null) {
          precursor_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          precursorBuilder_.clear();
        }
        if (fragmentBuilder_ == null) {
          fragment_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          fragmentBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_SendCoordinates_descriptor;
      }

      public se.lth.immun.protocol.ChromatogramProto.SendCoordinates getDefaultInstanceForType() {
        return se.lth.immun.protocol.ChromatogramProto.SendCoordinates.getDefaultInstance();
      }

      public se.lth.immun.protocol.ChromatogramProto.SendCoordinates build() {
        se.lth.immun.protocol.ChromatogramProto.SendCoordinates result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public se.lth.immun.protocol.ChromatogramProto.SendCoordinates buildPartial() {
        se.lth.immun.protocol.ChromatogramProto.SendCoordinates result = new se.lth.immun.protocol.ChromatogramProto.SendCoordinates(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (precursorBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            precursor_ = java.util.Collections.unmodifiableList(precursor_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.precursor_ = precursor_;
        } else {
          result.precursor_ = precursorBuilder_.build();
        }
        if (fragmentBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            fragment_ = java.util.Collections.unmodifiableList(fragment_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.fragment_ = fragment_;
        } else {
          result.fragment_ = fragmentBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.lth.immun.protocol.ChromatogramProto.SendCoordinates) {
          return mergeFrom((se.lth.immun.protocol.ChromatogramProto.SendCoordinates)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(se.lth.immun.protocol.ChromatogramProto.SendCoordinates other) {
        if (other == se.lth.immun.protocol.ChromatogramProto.SendCoordinates.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (precursorBuilder_ == null) {
          if (!other.precursor_.isEmpty()) {
            if (precursor_.isEmpty()) {
              precursor_ = other.precursor_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePrecursorIsMutable();
              precursor_.addAll(other.precursor_);
            }
            onChanged();
          }
        } else {
          if (!other.precursor_.isEmpty()) {
            if (precursorBuilder_.isEmpty()) {
              precursorBuilder_.dispose();
              precursorBuilder_ = null;
              precursor_ = other.precursor_;
              bitField0_ = (bitField0_ & ~0x00000002);
              precursorBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPrecursorFieldBuilder() : null;
            } else {
              precursorBuilder_.addAllMessages(other.precursor_);
            }
          }
        }
        if (fragmentBuilder_ == null) {
          if (!other.fragment_.isEmpty()) {
            if (fragment_.isEmpty()) {
              fragment_ = other.fragment_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureFragmentIsMutable();
              fragment_.addAll(other.fragment_);
            }
            onChanged();
          }
        } else {
          if (!other.fragment_.isEmpty()) {
            if (fragmentBuilder_.isEmpty()) {
              fragmentBuilder_.dispose();
              fragmentBuilder_ = null;
              fragment_ = other.fragment_;
              bitField0_ = (bitField0_ & ~0x00000004);
              fragmentBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFragmentFieldBuilder() : null;
            } else {
              fragmentBuilder_.addAllMessages(other.fragment_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        se.lth.immun.protocol.ChromatogramProto.SendCoordinates parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (se.lth.immun.protocol.ChromatogramProto.SendCoordinates) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>optional int32 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 1;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<se.lth.immun.protocol.ChromatogramProto.Bounds> precursor_ =
        java.util.Collections.emptyList();
      private void ensurePrecursorIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          precursor_ = new java.util.ArrayList<se.lth.immun.protocol.ChromatogramProto.Bounds>(precursor_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          se.lth.immun.protocol.ChromatogramProto.Bounds, se.lth.immun.protocol.ChromatogramProto.Bounds.Builder, se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder> precursorBuilder_;

      /**
       * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
       */
      public java.util.List<se.lth.immun.protocol.ChromatogramProto.Bounds> getPrecursorList() {
        if (precursorBuilder_ == null) {
          return java.util.Collections.unmodifiableList(precursor_);
        } else {
          return precursorBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
       */
      public int getPrecursorCount() {
        if (precursorBuilder_ == null) {
          return precursor_.size();
        } else {
          return precursorBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.Bounds getPrecursor(int index) {
        if (precursorBuilder_ == null) {
          return precursor_.get(index);
        } else {
          return precursorBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
       */
      public Builder setPrecursor(
          int index, se.lth.immun.protocol.ChromatogramProto.Bounds value) {
        if (precursorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePrecursorIsMutable();
          precursor_.set(index, value);
          onChanged();
        } else {
          precursorBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
       */
      public Builder setPrecursor(
          int index, se.lth.immun.protocol.ChromatogramProto.Bounds.Builder builderForValue) {
        if (precursorBuilder_ == null) {
          ensurePrecursorIsMutable();
          precursor_.set(index, builderForValue.build());
          onChanged();
        } else {
          precursorBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
       */
      public Builder addPrecursor(se.lth.immun.protocol.ChromatogramProto.Bounds value) {
        if (precursorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePrecursorIsMutable();
          precursor_.add(value);
          onChanged();
        } else {
          precursorBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
       */
      public Builder addPrecursor(
          int index, se.lth.immun.protocol.ChromatogramProto.Bounds value) {
        if (precursorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePrecursorIsMutable();
          precursor_.add(index, value);
          onChanged();
        } else {
          precursorBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
       */
      public Builder addPrecursor(
          se.lth.immun.protocol.ChromatogramProto.Bounds.Builder builderForValue) {
        if (precursorBuilder_ == null) {
          ensurePrecursorIsMutable();
          precursor_.add(builderForValue.build());
          onChanged();
        } else {
          precursorBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
       */
      public Builder addPrecursor(
          int index, se.lth.immun.protocol.ChromatogramProto.Bounds.Builder builderForValue) {
        if (precursorBuilder_ == null) {
          ensurePrecursorIsMutable();
          precursor_.add(index, builderForValue.build());
          onChanged();
        } else {
          precursorBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
       */
      public Builder addAllPrecursor(
          java.lang.Iterable<? extends se.lth.immun.protocol.ChromatogramProto.Bounds> values) {
        if (precursorBuilder_ == null) {
          ensurePrecursorIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, precursor_);
          onChanged();
        } else {
          precursorBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
       */
      public Builder clearPrecursor() {
        if (precursorBuilder_ == null) {
          precursor_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          precursorBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
       */
      public Builder removePrecursor(int index) {
        if (precursorBuilder_ == null) {
          ensurePrecursorIsMutable();
          precursor_.remove(index);
          onChanged();
        } else {
          precursorBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.Bounds.Builder getPrecursorBuilder(
          int index) {
        return getPrecursorFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder getPrecursorOrBuilder(
          int index) {
        if (precursorBuilder_ == null) {
          return precursor_.get(index);  } else {
          return precursorBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
       */
      public java.util.List<? extends se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder> 
           getPrecursorOrBuilderList() {
        if (precursorBuilder_ != null) {
          return precursorBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(precursor_);
        }
      }
      /**
       * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.Bounds.Builder addPrecursorBuilder() {
        return getPrecursorFieldBuilder().addBuilder(
            se.lth.immun.protocol.ChromatogramProto.Bounds.getDefaultInstance());
      }
      /**
       * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.Bounds.Builder addPrecursorBuilder(
          int index) {
        return getPrecursorFieldBuilder().addBuilder(
            index, se.lth.immun.protocol.ChromatogramProto.Bounds.getDefaultInstance());
      }
      /**
       * <code>repeated .se.lth.immun.protocol.Bounds precursor = 2;</code>
       */
      public java.util.List<se.lth.immun.protocol.ChromatogramProto.Bounds.Builder> 
           getPrecursorBuilderList() {
        return getPrecursorFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          se.lth.immun.protocol.ChromatogramProto.Bounds, se.lth.immun.protocol.ChromatogramProto.Bounds.Builder, se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder> 
          getPrecursorFieldBuilder() {
        if (precursorBuilder_ == null) {
          precursorBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              se.lth.immun.protocol.ChromatogramProto.Bounds, se.lth.immun.protocol.ChromatogramProto.Bounds.Builder, se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder>(
                  precursor_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          precursor_ = null;
        }
        return precursorBuilder_;
      }

      private java.util.List<se.lth.immun.protocol.ChromatogramProto.FragmentBounds> fragment_ =
        java.util.Collections.emptyList();
      private void ensureFragmentIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          fragment_ = new java.util.ArrayList<se.lth.immun.protocol.ChromatogramProto.FragmentBounds>(fragment_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          se.lth.immun.protocol.ChromatogramProto.FragmentBounds, se.lth.immun.protocol.ChromatogramProto.FragmentBounds.Builder, se.lth.immun.protocol.ChromatogramProto.FragmentBoundsOrBuilder> fragmentBuilder_;

      /**
       * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
       */
      public java.util.List<se.lth.immun.protocol.ChromatogramProto.FragmentBounds> getFragmentList() {
        if (fragmentBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fragment_);
        } else {
          return fragmentBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
       */
      public int getFragmentCount() {
        if (fragmentBuilder_ == null) {
          return fragment_.size();
        } else {
          return fragmentBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.FragmentBounds getFragment(int index) {
        if (fragmentBuilder_ == null) {
          return fragment_.get(index);
        } else {
          return fragmentBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
       */
      public Builder setFragment(
          int index, se.lth.immun.protocol.ChromatogramProto.FragmentBounds value) {
        if (fragmentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFragmentIsMutable();
          fragment_.set(index, value);
          onChanged();
        } else {
          fragmentBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
       */
      public Builder setFragment(
          int index, se.lth.immun.protocol.ChromatogramProto.FragmentBounds.Builder builderForValue) {
        if (fragmentBuilder_ == null) {
          ensureFragmentIsMutable();
          fragment_.set(index, builderForValue.build());
          onChanged();
        } else {
          fragmentBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
       */
      public Builder addFragment(se.lth.immun.protocol.ChromatogramProto.FragmentBounds value) {
        if (fragmentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFragmentIsMutable();
          fragment_.add(value);
          onChanged();
        } else {
          fragmentBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
       */
      public Builder addFragment(
          int index, se.lth.immun.protocol.ChromatogramProto.FragmentBounds value) {
        if (fragmentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFragmentIsMutable();
          fragment_.add(index, value);
          onChanged();
        } else {
          fragmentBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
       */
      public Builder addFragment(
          se.lth.immun.protocol.ChromatogramProto.FragmentBounds.Builder builderForValue) {
        if (fragmentBuilder_ == null) {
          ensureFragmentIsMutable();
          fragment_.add(builderForValue.build());
          onChanged();
        } else {
          fragmentBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
       */
      public Builder addFragment(
          int index, se.lth.immun.protocol.ChromatogramProto.FragmentBounds.Builder builderForValue) {
        if (fragmentBuilder_ == null) {
          ensureFragmentIsMutable();
          fragment_.add(index, builderForValue.build());
          onChanged();
        } else {
          fragmentBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
       */
      public Builder addAllFragment(
          java.lang.Iterable<? extends se.lth.immun.protocol.ChromatogramProto.FragmentBounds> values) {
        if (fragmentBuilder_ == null) {
          ensureFragmentIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fragment_);
          onChanged();
        } else {
          fragmentBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
       */
      public Builder clearFragment() {
        if (fragmentBuilder_ == null) {
          fragment_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          fragmentBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
       */
      public Builder removeFragment(int index) {
        if (fragmentBuilder_ == null) {
          ensureFragmentIsMutable();
          fragment_.remove(index);
          onChanged();
        } else {
          fragmentBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.FragmentBounds.Builder getFragmentBuilder(
          int index) {
        return getFragmentFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.FragmentBoundsOrBuilder getFragmentOrBuilder(
          int index) {
        if (fragmentBuilder_ == null) {
          return fragment_.get(index);  } else {
          return fragmentBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
       */
      public java.util.List<? extends se.lth.immun.protocol.ChromatogramProto.FragmentBoundsOrBuilder> 
           getFragmentOrBuilderList() {
        if (fragmentBuilder_ != null) {
          return fragmentBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fragment_);
        }
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.FragmentBounds.Builder addFragmentBuilder() {
        return getFragmentFieldBuilder().addBuilder(
            se.lth.immun.protocol.ChromatogramProto.FragmentBounds.getDefaultInstance());
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.FragmentBounds.Builder addFragmentBuilder(
          int index) {
        return getFragmentFieldBuilder().addBuilder(
            index, se.lth.immun.protocol.ChromatogramProto.FragmentBounds.getDefaultInstance());
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentBounds fragment = 3;</code>
       */
      public java.util.List<se.lth.immun.protocol.ChromatogramProto.FragmentBounds.Builder> 
           getFragmentBuilderList() {
        return getFragmentFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          se.lth.immun.protocol.ChromatogramProto.FragmentBounds, se.lth.immun.protocol.ChromatogramProto.FragmentBounds.Builder, se.lth.immun.protocol.ChromatogramProto.FragmentBoundsOrBuilder> 
          getFragmentFieldBuilder() {
        if (fragmentBuilder_ == null) {
          fragmentBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              se.lth.immun.protocol.ChromatogramProto.FragmentBounds, se.lth.immun.protocol.ChromatogramProto.FragmentBounds.Builder, se.lth.immun.protocol.ChromatogramProto.FragmentBoundsOrBuilder>(
                  fragment_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          fragment_ = null;
        }
        return fragmentBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:se.lth.immun.protocol.SendCoordinates)
    }

    static {
      defaultInstance = new SendCoordinates(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:se.lth.immun.protocol.SendCoordinates)
  }

  public interface TraceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:se.lth.immun.protocol.Trace)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated double time = 1;</code>
     */
    java.util.List<java.lang.Double> getTimeList();
    /**
     * <code>repeated double time = 1;</code>
     */
    int getTimeCount();
    /**
     * <code>repeated double time = 1;</code>
     */
    double getTime(int index);

    /**
     * <code>repeated double intensity = 2;</code>
     */
    java.util.List<java.lang.Double> getIntensityList();
    /**
     * <code>repeated double intensity = 2;</code>
     */
    int getIntensityCount();
    /**
     * <code>repeated double intensity = 2;</code>
     */
    double getIntensity(int index);
  }
  /**
   * Protobuf type {@code se.lth.immun.protocol.Trace}
   */
  public static final class Trace extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:se.lth.immun.protocol.Trace)
      TraceOrBuilder {
    // Use Trace.newBuilder() to construct.
    private Trace(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Trace(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Trace defaultInstance;
    public static Trace getDefaultInstance() {
      return defaultInstance;
    }

    public Trace getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Trace(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                time_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              time_.add(input.readDouble());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                time_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                time_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 17: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                intensity_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000002;
              }
              intensity_.add(input.readDouble());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                intensity_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                intensity_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          time_ = java.util.Collections.unmodifiableList(time_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          intensity_ = java.util.Collections.unmodifiableList(intensity_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_Trace_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_Trace_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              se.lth.immun.protocol.ChromatogramProto.Trace.class, se.lth.immun.protocol.ChromatogramProto.Trace.Builder.class);
    }

    public static com.google.protobuf.Parser<Trace> PARSER =
        new com.google.protobuf.AbstractParser<Trace>() {
      public Trace parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Trace(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Trace> getParserForType() {
      return PARSER;
    }

    public static final int TIME_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Double> time_;
    /**
     * <code>repeated double time = 1;</code>
     */
    public java.util.List<java.lang.Double>
        getTimeList() {
      return time_;
    }
    /**
     * <code>repeated double time = 1;</code>
     */
    public int getTimeCount() {
      return time_.size();
    }
    /**
     * <code>repeated double time = 1;</code>
     */
    public double getTime(int index) {
      return time_.get(index);
    }

    public static final int INTENSITY_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Double> intensity_;
    /**
     * <code>repeated double intensity = 2;</code>
     */
    public java.util.List<java.lang.Double>
        getIntensityList() {
      return intensity_;
    }
    /**
     * <code>repeated double intensity = 2;</code>
     */
    public int getIntensityCount() {
      return intensity_.size();
    }
    /**
     * <code>repeated double intensity = 2;</code>
     */
    public double getIntensity(int index) {
      return intensity_.get(index);
    }

    private void initFields() {
      time_ = java.util.Collections.emptyList();
      intensity_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < time_.size(); i++) {
        output.writeDouble(1, time_.get(i));
      }
      for (int i = 0; i < intensity_.size(); i++) {
        output.writeDouble(2, intensity_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getTimeList().size();
        size += dataSize;
        size += 1 * getTimeList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getIntensityList().size();
        size += dataSize;
        size += 1 * getIntensityList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static se.lth.immun.protocol.ChromatogramProto.Trace parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static se.lth.immun.protocol.ChromatogramProto.Trace parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.Trace parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static se.lth.immun.protocol.ChromatogramProto.Trace parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.Trace parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static se.lth.immun.protocol.ChromatogramProto.Trace parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.Trace parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static se.lth.immun.protocol.ChromatogramProto.Trace parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.Trace parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static se.lth.immun.protocol.ChromatogramProto.Trace parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.lth.immun.protocol.ChromatogramProto.Trace prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code se.lth.immun.protocol.Trace}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:se.lth.immun.protocol.Trace)
        se.lth.immun.protocol.ChromatogramProto.TraceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_Trace_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_Trace_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                se.lth.immun.protocol.ChromatogramProto.Trace.class, se.lth.immun.protocol.ChromatogramProto.Trace.Builder.class);
      }

      // Construct using se.lth.immun.protocol.ChromatogramProto.Trace.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        time_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        intensity_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_Trace_descriptor;
      }

      public se.lth.immun.protocol.ChromatogramProto.Trace getDefaultInstanceForType() {
        return se.lth.immun.protocol.ChromatogramProto.Trace.getDefaultInstance();
      }

      public se.lth.immun.protocol.ChromatogramProto.Trace build() {
        se.lth.immun.protocol.ChromatogramProto.Trace result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public se.lth.immun.protocol.ChromatogramProto.Trace buildPartial() {
        se.lth.immun.protocol.ChromatogramProto.Trace result = new se.lth.immun.protocol.ChromatogramProto.Trace(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          time_ = java.util.Collections.unmodifiableList(time_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.time_ = time_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          intensity_ = java.util.Collections.unmodifiableList(intensity_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.intensity_ = intensity_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.lth.immun.protocol.ChromatogramProto.Trace) {
          return mergeFrom((se.lth.immun.protocol.ChromatogramProto.Trace)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(se.lth.immun.protocol.ChromatogramProto.Trace other) {
        if (other == se.lth.immun.protocol.ChromatogramProto.Trace.getDefaultInstance()) return this;
        if (!other.time_.isEmpty()) {
          if (time_.isEmpty()) {
            time_ = other.time_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTimeIsMutable();
            time_.addAll(other.time_);
          }
          onChanged();
        }
        if (!other.intensity_.isEmpty()) {
          if (intensity_.isEmpty()) {
            intensity_ = other.intensity_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureIntensityIsMutable();
            intensity_.addAll(other.intensity_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        se.lth.immun.protocol.ChromatogramProto.Trace parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (se.lth.immun.protocol.ChromatogramProto.Trace) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Double> time_ = java.util.Collections.emptyList();
      private void ensureTimeIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          time_ = new java.util.ArrayList<java.lang.Double>(time_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated double time = 1;</code>
       */
      public java.util.List<java.lang.Double>
          getTimeList() {
        return java.util.Collections.unmodifiableList(time_);
      }
      /**
       * <code>repeated double time = 1;</code>
       */
      public int getTimeCount() {
        return time_.size();
      }
      /**
       * <code>repeated double time = 1;</code>
       */
      public double getTime(int index) {
        return time_.get(index);
      }
      /**
       * <code>repeated double time = 1;</code>
       */
      public Builder setTime(
          int index, double value) {
        ensureTimeIsMutable();
        time_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double time = 1;</code>
       */
      public Builder addTime(double value) {
        ensureTimeIsMutable();
        time_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double time = 1;</code>
       */
      public Builder addAllTime(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureTimeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, time_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double time = 1;</code>
       */
      public Builder clearTime() {
        time_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> intensity_ = java.util.Collections.emptyList();
      private void ensureIntensityIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          intensity_ = new java.util.ArrayList<java.lang.Double>(intensity_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated double intensity = 2;</code>
       */
      public java.util.List<java.lang.Double>
          getIntensityList() {
        return java.util.Collections.unmodifiableList(intensity_);
      }
      /**
       * <code>repeated double intensity = 2;</code>
       */
      public int getIntensityCount() {
        return intensity_.size();
      }
      /**
       * <code>repeated double intensity = 2;</code>
       */
      public double getIntensity(int index) {
        return intensity_.get(index);
      }
      /**
       * <code>repeated double intensity = 2;</code>
       */
      public Builder setIntensity(
          int index, double value) {
        ensureIntensityIsMutable();
        intensity_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double intensity = 2;</code>
       */
      public Builder addIntensity(double value) {
        ensureIntensityIsMutable();
        intensity_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double intensity = 2;</code>
       */
      public Builder addAllIntensity(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureIntensityIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, intensity_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double intensity = 2;</code>
       */
      public Builder clearIntensity() {
        intensity_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:se.lth.immun.protocol.Trace)
    }

    static {
      defaultInstance = new Trace(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:se.lth.immun.protocol.Trace)
  }

  public interface PrecursorTraceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:se.lth.immun.protocol.PrecursorTrace)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
     */
    boolean hasPrecursor();
    /**
     * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
     */
    se.lth.immun.protocol.ChromatogramProto.Bounds getPrecursor();
    /**
     * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
     */
    se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder getPrecursorOrBuilder();

    /**
     * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
     */
    boolean hasTrace();
    /**
     * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
     */
    se.lth.immun.protocol.ChromatogramProto.Trace getTrace();
    /**
     * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
     */
    se.lth.immun.protocol.ChromatogramProto.TraceOrBuilder getTraceOrBuilder();
  }
  /**
   * Protobuf type {@code se.lth.immun.protocol.PrecursorTrace}
   */
  public static final class PrecursorTrace extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:se.lth.immun.protocol.PrecursorTrace)
      PrecursorTraceOrBuilder {
    // Use PrecursorTrace.newBuilder() to construct.
    private PrecursorTrace(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PrecursorTrace(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PrecursorTrace defaultInstance;
    public static PrecursorTrace getDefaultInstance() {
      return defaultInstance;
    }

    public PrecursorTrace getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PrecursorTrace(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              se.lth.immun.protocol.ChromatogramProto.Bounds.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = precursor_.toBuilder();
              }
              precursor_ = input.readMessage(se.lth.immun.protocol.ChromatogramProto.Bounds.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(precursor_);
                precursor_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              se.lth.immun.protocol.ChromatogramProto.Trace.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = trace_.toBuilder();
              }
              trace_ = input.readMessage(se.lth.immun.protocol.ChromatogramProto.Trace.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(trace_);
                trace_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_PrecursorTrace_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_PrecursorTrace_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              se.lth.immun.protocol.ChromatogramProto.PrecursorTrace.class, se.lth.immun.protocol.ChromatogramProto.PrecursorTrace.Builder.class);
    }

    public static com.google.protobuf.Parser<PrecursorTrace> PARSER =
        new com.google.protobuf.AbstractParser<PrecursorTrace>() {
      public PrecursorTrace parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PrecursorTrace(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PrecursorTrace> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PRECURSOR_FIELD_NUMBER = 1;
    private se.lth.immun.protocol.ChromatogramProto.Bounds precursor_;
    /**
     * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
     */
    public boolean hasPrecursor() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
     */
    public se.lth.immun.protocol.ChromatogramProto.Bounds getPrecursor() {
      return precursor_;
    }
    /**
     * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
     */
    public se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder getPrecursorOrBuilder() {
      return precursor_;
    }

    public static final int TRACE_FIELD_NUMBER = 2;
    private se.lth.immun.protocol.ChromatogramProto.Trace trace_;
    /**
     * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
     */
    public boolean hasTrace() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
     */
    public se.lth.immun.protocol.ChromatogramProto.Trace getTrace() {
      return trace_;
    }
    /**
     * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
     */
    public se.lth.immun.protocol.ChromatogramProto.TraceOrBuilder getTraceOrBuilder() {
      return trace_;
    }

    private void initFields() {
      precursor_ = se.lth.immun.protocol.ChromatogramProto.Bounds.getDefaultInstance();
      trace_ = se.lth.immun.protocol.ChromatogramProto.Trace.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, precursor_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, trace_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, precursor_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, trace_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static se.lth.immun.protocol.ChromatogramProto.PrecursorTrace parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static se.lth.immun.protocol.ChromatogramProto.PrecursorTrace parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.PrecursorTrace parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static se.lth.immun.protocol.ChromatogramProto.PrecursorTrace parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.PrecursorTrace parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static se.lth.immun.protocol.ChromatogramProto.PrecursorTrace parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.PrecursorTrace parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static se.lth.immun.protocol.ChromatogramProto.PrecursorTrace parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.PrecursorTrace parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static se.lth.immun.protocol.ChromatogramProto.PrecursorTrace parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.lth.immun.protocol.ChromatogramProto.PrecursorTrace prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code se.lth.immun.protocol.PrecursorTrace}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:se.lth.immun.protocol.PrecursorTrace)
        se.lth.immun.protocol.ChromatogramProto.PrecursorTraceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_PrecursorTrace_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_PrecursorTrace_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                se.lth.immun.protocol.ChromatogramProto.PrecursorTrace.class, se.lth.immun.protocol.ChromatogramProto.PrecursorTrace.Builder.class);
      }

      // Construct using se.lth.immun.protocol.ChromatogramProto.PrecursorTrace.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPrecursorFieldBuilder();
          getTraceFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (precursorBuilder_ == null) {
          precursor_ = se.lth.immun.protocol.ChromatogramProto.Bounds.getDefaultInstance();
        } else {
          precursorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (traceBuilder_ == null) {
          trace_ = se.lth.immun.protocol.ChromatogramProto.Trace.getDefaultInstance();
        } else {
          traceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_PrecursorTrace_descriptor;
      }

      public se.lth.immun.protocol.ChromatogramProto.PrecursorTrace getDefaultInstanceForType() {
        return se.lth.immun.protocol.ChromatogramProto.PrecursorTrace.getDefaultInstance();
      }

      public se.lth.immun.protocol.ChromatogramProto.PrecursorTrace build() {
        se.lth.immun.protocol.ChromatogramProto.PrecursorTrace result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public se.lth.immun.protocol.ChromatogramProto.PrecursorTrace buildPartial() {
        se.lth.immun.protocol.ChromatogramProto.PrecursorTrace result = new se.lth.immun.protocol.ChromatogramProto.PrecursorTrace(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (precursorBuilder_ == null) {
          result.precursor_ = precursor_;
        } else {
          result.precursor_ = precursorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (traceBuilder_ == null) {
          result.trace_ = trace_;
        } else {
          result.trace_ = traceBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.lth.immun.protocol.ChromatogramProto.PrecursorTrace) {
          return mergeFrom((se.lth.immun.protocol.ChromatogramProto.PrecursorTrace)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(se.lth.immun.protocol.ChromatogramProto.PrecursorTrace other) {
        if (other == se.lth.immun.protocol.ChromatogramProto.PrecursorTrace.getDefaultInstance()) return this;
        if (other.hasPrecursor()) {
          mergePrecursor(other.getPrecursor());
        }
        if (other.hasTrace()) {
          mergeTrace(other.getTrace());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        se.lth.immun.protocol.ChromatogramProto.PrecursorTrace parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (se.lth.immun.protocol.ChromatogramProto.PrecursorTrace) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private se.lth.immun.protocol.ChromatogramProto.Bounds precursor_ = se.lth.immun.protocol.ChromatogramProto.Bounds.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          se.lth.immun.protocol.ChromatogramProto.Bounds, se.lth.immun.protocol.ChromatogramProto.Bounds.Builder, se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder> precursorBuilder_;
      /**
       * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
       */
      public boolean hasPrecursor() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.Bounds getPrecursor() {
        if (precursorBuilder_ == null) {
          return precursor_;
        } else {
          return precursorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
       */
      public Builder setPrecursor(se.lth.immun.protocol.ChromatogramProto.Bounds value) {
        if (precursorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          precursor_ = value;
          onChanged();
        } else {
          precursorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
       */
      public Builder setPrecursor(
          se.lth.immun.protocol.ChromatogramProto.Bounds.Builder builderForValue) {
        if (precursorBuilder_ == null) {
          precursor_ = builderForValue.build();
          onChanged();
        } else {
          precursorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
       */
      public Builder mergePrecursor(se.lth.immun.protocol.ChromatogramProto.Bounds value) {
        if (precursorBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              precursor_ != se.lth.immun.protocol.ChromatogramProto.Bounds.getDefaultInstance()) {
            precursor_ =
              se.lth.immun.protocol.ChromatogramProto.Bounds.newBuilder(precursor_).mergeFrom(value).buildPartial();
          } else {
            precursor_ = value;
          }
          onChanged();
        } else {
          precursorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
       */
      public Builder clearPrecursor() {
        if (precursorBuilder_ == null) {
          precursor_ = se.lth.immun.protocol.ChromatogramProto.Bounds.getDefaultInstance();
          onChanged();
        } else {
          precursorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.Bounds.Builder getPrecursorBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPrecursorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder getPrecursorOrBuilder() {
        if (precursorBuilder_ != null) {
          return precursorBuilder_.getMessageOrBuilder();
        } else {
          return precursor_;
        }
      }
      /**
       * <code>optional .se.lth.immun.protocol.Bounds precursor = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          se.lth.immun.protocol.ChromatogramProto.Bounds, se.lth.immun.protocol.ChromatogramProto.Bounds.Builder, se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder> 
          getPrecursorFieldBuilder() {
        if (precursorBuilder_ == null) {
          precursorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              se.lth.immun.protocol.ChromatogramProto.Bounds, se.lth.immun.protocol.ChromatogramProto.Bounds.Builder, se.lth.immun.protocol.ChromatogramProto.BoundsOrBuilder>(
                  getPrecursor(),
                  getParentForChildren(),
                  isClean());
          precursor_ = null;
        }
        return precursorBuilder_;
      }

      private se.lth.immun.protocol.ChromatogramProto.Trace trace_ = se.lth.immun.protocol.ChromatogramProto.Trace.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          se.lth.immun.protocol.ChromatogramProto.Trace, se.lth.immun.protocol.ChromatogramProto.Trace.Builder, se.lth.immun.protocol.ChromatogramProto.TraceOrBuilder> traceBuilder_;
      /**
       * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
       */
      public boolean hasTrace() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.Trace getTrace() {
        if (traceBuilder_ == null) {
          return trace_;
        } else {
          return traceBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
       */
      public Builder setTrace(se.lth.immun.protocol.ChromatogramProto.Trace value) {
        if (traceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trace_ = value;
          onChanged();
        } else {
          traceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
       */
      public Builder setTrace(
          se.lth.immun.protocol.ChromatogramProto.Trace.Builder builderForValue) {
        if (traceBuilder_ == null) {
          trace_ = builderForValue.build();
          onChanged();
        } else {
          traceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
       */
      public Builder mergeTrace(se.lth.immun.protocol.ChromatogramProto.Trace value) {
        if (traceBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              trace_ != se.lth.immun.protocol.ChromatogramProto.Trace.getDefaultInstance()) {
            trace_ =
              se.lth.immun.protocol.ChromatogramProto.Trace.newBuilder(trace_).mergeFrom(value).buildPartial();
          } else {
            trace_ = value;
          }
          onChanged();
        } else {
          traceBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
       */
      public Builder clearTrace() {
        if (traceBuilder_ == null) {
          trace_ = se.lth.immun.protocol.ChromatogramProto.Trace.getDefaultInstance();
          onChanged();
        } else {
          traceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.Trace.Builder getTraceBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTraceFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.TraceOrBuilder getTraceOrBuilder() {
        if (traceBuilder_ != null) {
          return traceBuilder_.getMessageOrBuilder();
        } else {
          return trace_;
        }
      }
      /**
       * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          se.lth.immun.protocol.ChromatogramProto.Trace, se.lth.immun.protocol.ChromatogramProto.Trace.Builder, se.lth.immun.protocol.ChromatogramProto.TraceOrBuilder> 
          getTraceFieldBuilder() {
        if (traceBuilder_ == null) {
          traceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              se.lth.immun.protocol.ChromatogramProto.Trace, se.lth.immun.protocol.ChromatogramProto.Trace.Builder, se.lth.immun.protocol.ChromatogramProto.TraceOrBuilder>(
                  getTrace(),
                  getParentForChildren(),
                  isClean());
          trace_ = null;
        }
        return traceBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:se.lth.immun.protocol.PrecursorTrace)
    }

    static {
      defaultInstance = new PrecursorTrace(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:se.lth.immun.protocol.PrecursorTrace)
  }

  public interface FragmentTraceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:se.lth.immun.protocol.FragmentTrace)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .se.lth.immun.protocol.FragmentBounds fragment = 1;</code>
     */
    boolean hasFragment();
    /**
     * <code>optional .se.lth.immun.protocol.FragmentBounds fragment = 1;</code>
     */
    se.lth.immun.protocol.ChromatogramProto.FragmentBounds getFragment();
    /**
     * <code>optional .se.lth.immun.protocol.FragmentBounds fragment = 1;</code>
     */
    se.lth.immun.protocol.ChromatogramProto.FragmentBoundsOrBuilder getFragmentOrBuilder();

    /**
     * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
     */
    boolean hasTrace();
    /**
     * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
     */
    se.lth.immun.protocol.ChromatogramProto.Trace getTrace();
    /**
     * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
     */
    se.lth.immun.protocol.ChromatogramProto.TraceOrBuilder getTraceOrBuilder();
  }
  /**
   * Protobuf type {@code se.lth.immun.protocol.FragmentTrace}
   */
  public static final class FragmentTrace extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:se.lth.immun.protocol.FragmentTrace)
      FragmentTraceOrBuilder {
    // Use FragmentTrace.newBuilder() to construct.
    private FragmentTrace(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FragmentTrace(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FragmentTrace defaultInstance;
    public static FragmentTrace getDefaultInstance() {
      return defaultInstance;
    }

    public FragmentTrace getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FragmentTrace(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              se.lth.immun.protocol.ChromatogramProto.FragmentBounds.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = fragment_.toBuilder();
              }
              fragment_ = input.readMessage(se.lth.immun.protocol.ChromatogramProto.FragmentBounds.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fragment_);
                fragment_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              se.lth.immun.protocol.ChromatogramProto.Trace.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = trace_.toBuilder();
              }
              trace_ = input.readMessage(se.lth.immun.protocol.ChromatogramProto.Trace.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(trace_);
                trace_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_FragmentTrace_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_FragmentTrace_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              se.lth.immun.protocol.ChromatogramProto.FragmentTrace.class, se.lth.immun.protocol.ChromatogramProto.FragmentTrace.Builder.class);
    }

    public static com.google.protobuf.Parser<FragmentTrace> PARSER =
        new com.google.protobuf.AbstractParser<FragmentTrace>() {
      public FragmentTrace parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FragmentTrace(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FragmentTrace> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FRAGMENT_FIELD_NUMBER = 1;
    private se.lth.immun.protocol.ChromatogramProto.FragmentBounds fragment_;
    /**
     * <code>optional .se.lth.immun.protocol.FragmentBounds fragment = 1;</code>
     */
    public boolean hasFragment() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .se.lth.immun.protocol.FragmentBounds fragment = 1;</code>
     */
    public se.lth.immun.protocol.ChromatogramProto.FragmentBounds getFragment() {
      return fragment_;
    }
    /**
     * <code>optional .se.lth.immun.protocol.FragmentBounds fragment = 1;</code>
     */
    public se.lth.immun.protocol.ChromatogramProto.FragmentBoundsOrBuilder getFragmentOrBuilder() {
      return fragment_;
    }

    public static final int TRACE_FIELD_NUMBER = 2;
    private se.lth.immun.protocol.ChromatogramProto.Trace trace_;
    /**
     * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
     */
    public boolean hasTrace() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
     */
    public se.lth.immun.protocol.ChromatogramProto.Trace getTrace() {
      return trace_;
    }
    /**
     * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
     */
    public se.lth.immun.protocol.ChromatogramProto.TraceOrBuilder getTraceOrBuilder() {
      return trace_;
    }

    private void initFields() {
      fragment_ = se.lth.immun.protocol.ChromatogramProto.FragmentBounds.getDefaultInstance();
      trace_ = se.lth.immun.protocol.ChromatogramProto.Trace.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, fragment_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, trace_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, fragment_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, trace_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static se.lth.immun.protocol.ChromatogramProto.FragmentTrace parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static se.lth.immun.protocol.ChromatogramProto.FragmentTrace parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.FragmentTrace parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static se.lth.immun.protocol.ChromatogramProto.FragmentTrace parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.FragmentTrace parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static se.lth.immun.protocol.ChromatogramProto.FragmentTrace parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.FragmentTrace parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static se.lth.immun.protocol.ChromatogramProto.FragmentTrace parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.FragmentTrace parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static se.lth.immun.protocol.ChromatogramProto.FragmentTrace parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.lth.immun.protocol.ChromatogramProto.FragmentTrace prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code se.lth.immun.protocol.FragmentTrace}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:se.lth.immun.protocol.FragmentTrace)
        se.lth.immun.protocol.ChromatogramProto.FragmentTraceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_FragmentTrace_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_FragmentTrace_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                se.lth.immun.protocol.ChromatogramProto.FragmentTrace.class, se.lth.immun.protocol.ChromatogramProto.FragmentTrace.Builder.class);
      }

      // Construct using se.lth.immun.protocol.ChromatogramProto.FragmentTrace.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFragmentFieldBuilder();
          getTraceFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (fragmentBuilder_ == null) {
          fragment_ = se.lth.immun.protocol.ChromatogramProto.FragmentBounds.getDefaultInstance();
        } else {
          fragmentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (traceBuilder_ == null) {
          trace_ = se.lth.immun.protocol.ChromatogramProto.Trace.getDefaultInstance();
        } else {
          traceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_FragmentTrace_descriptor;
      }

      public se.lth.immun.protocol.ChromatogramProto.FragmentTrace getDefaultInstanceForType() {
        return se.lth.immun.protocol.ChromatogramProto.FragmentTrace.getDefaultInstance();
      }

      public se.lth.immun.protocol.ChromatogramProto.FragmentTrace build() {
        se.lth.immun.protocol.ChromatogramProto.FragmentTrace result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public se.lth.immun.protocol.ChromatogramProto.FragmentTrace buildPartial() {
        se.lth.immun.protocol.ChromatogramProto.FragmentTrace result = new se.lth.immun.protocol.ChromatogramProto.FragmentTrace(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (fragmentBuilder_ == null) {
          result.fragment_ = fragment_;
        } else {
          result.fragment_ = fragmentBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (traceBuilder_ == null) {
          result.trace_ = trace_;
        } else {
          result.trace_ = traceBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.lth.immun.protocol.ChromatogramProto.FragmentTrace) {
          return mergeFrom((se.lth.immun.protocol.ChromatogramProto.FragmentTrace)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(se.lth.immun.protocol.ChromatogramProto.FragmentTrace other) {
        if (other == se.lth.immun.protocol.ChromatogramProto.FragmentTrace.getDefaultInstance()) return this;
        if (other.hasFragment()) {
          mergeFragment(other.getFragment());
        }
        if (other.hasTrace()) {
          mergeTrace(other.getTrace());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        se.lth.immun.protocol.ChromatogramProto.FragmentTrace parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (se.lth.immun.protocol.ChromatogramProto.FragmentTrace) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private se.lth.immun.protocol.ChromatogramProto.FragmentBounds fragment_ = se.lth.immun.protocol.ChromatogramProto.FragmentBounds.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          se.lth.immun.protocol.ChromatogramProto.FragmentBounds, se.lth.immun.protocol.ChromatogramProto.FragmentBounds.Builder, se.lth.immun.protocol.ChromatogramProto.FragmentBoundsOrBuilder> fragmentBuilder_;
      /**
       * <code>optional .se.lth.immun.protocol.FragmentBounds fragment = 1;</code>
       */
      public boolean hasFragment() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .se.lth.immun.protocol.FragmentBounds fragment = 1;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.FragmentBounds getFragment() {
        if (fragmentBuilder_ == null) {
          return fragment_;
        } else {
          return fragmentBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .se.lth.immun.protocol.FragmentBounds fragment = 1;</code>
       */
      public Builder setFragment(se.lth.immun.protocol.ChromatogramProto.FragmentBounds value) {
        if (fragmentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fragment_ = value;
          onChanged();
        } else {
          fragmentBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .se.lth.immun.protocol.FragmentBounds fragment = 1;</code>
       */
      public Builder setFragment(
          se.lth.immun.protocol.ChromatogramProto.FragmentBounds.Builder builderForValue) {
        if (fragmentBuilder_ == null) {
          fragment_ = builderForValue.build();
          onChanged();
        } else {
          fragmentBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .se.lth.immun.protocol.FragmentBounds fragment = 1;</code>
       */
      public Builder mergeFragment(se.lth.immun.protocol.ChromatogramProto.FragmentBounds value) {
        if (fragmentBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              fragment_ != se.lth.immun.protocol.ChromatogramProto.FragmentBounds.getDefaultInstance()) {
            fragment_ =
              se.lth.immun.protocol.ChromatogramProto.FragmentBounds.newBuilder(fragment_).mergeFrom(value).buildPartial();
          } else {
            fragment_ = value;
          }
          onChanged();
        } else {
          fragmentBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .se.lth.immun.protocol.FragmentBounds fragment = 1;</code>
       */
      public Builder clearFragment() {
        if (fragmentBuilder_ == null) {
          fragment_ = se.lth.immun.protocol.ChromatogramProto.FragmentBounds.getDefaultInstance();
          onChanged();
        } else {
          fragmentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .se.lth.immun.protocol.FragmentBounds fragment = 1;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.FragmentBounds.Builder getFragmentBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getFragmentFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .se.lth.immun.protocol.FragmentBounds fragment = 1;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.FragmentBoundsOrBuilder getFragmentOrBuilder() {
        if (fragmentBuilder_ != null) {
          return fragmentBuilder_.getMessageOrBuilder();
        } else {
          return fragment_;
        }
      }
      /**
       * <code>optional .se.lth.immun.protocol.FragmentBounds fragment = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          se.lth.immun.protocol.ChromatogramProto.FragmentBounds, se.lth.immun.protocol.ChromatogramProto.FragmentBounds.Builder, se.lth.immun.protocol.ChromatogramProto.FragmentBoundsOrBuilder> 
          getFragmentFieldBuilder() {
        if (fragmentBuilder_ == null) {
          fragmentBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              se.lth.immun.protocol.ChromatogramProto.FragmentBounds, se.lth.immun.protocol.ChromatogramProto.FragmentBounds.Builder, se.lth.immun.protocol.ChromatogramProto.FragmentBoundsOrBuilder>(
                  getFragment(),
                  getParentForChildren(),
                  isClean());
          fragment_ = null;
        }
        return fragmentBuilder_;
      }

      private se.lth.immun.protocol.ChromatogramProto.Trace trace_ = se.lth.immun.protocol.ChromatogramProto.Trace.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          se.lth.immun.protocol.ChromatogramProto.Trace, se.lth.immun.protocol.ChromatogramProto.Trace.Builder, se.lth.immun.protocol.ChromatogramProto.TraceOrBuilder> traceBuilder_;
      /**
       * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
       */
      public boolean hasTrace() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.Trace getTrace() {
        if (traceBuilder_ == null) {
          return trace_;
        } else {
          return traceBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
       */
      public Builder setTrace(se.lth.immun.protocol.ChromatogramProto.Trace value) {
        if (traceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trace_ = value;
          onChanged();
        } else {
          traceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
       */
      public Builder setTrace(
          se.lth.immun.protocol.ChromatogramProto.Trace.Builder builderForValue) {
        if (traceBuilder_ == null) {
          trace_ = builderForValue.build();
          onChanged();
        } else {
          traceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
       */
      public Builder mergeTrace(se.lth.immun.protocol.ChromatogramProto.Trace value) {
        if (traceBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              trace_ != se.lth.immun.protocol.ChromatogramProto.Trace.getDefaultInstance()) {
            trace_ =
              se.lth.immun.protocol.ChromatogramProto.Trace.newBuilder(trace_).mergeFrom(value).buildPartial();
          } else {
            trace_ = value;
          }
          onChanged();
        } else {
          traceBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
       */
      public Builder clearTrace() {
        if (traceBuilder_ == null) {
          trace_ = se.lth.immun.protocol.ChromatogramProto.Trace.getDefaultInstance();
          onChanged();
        } else {
          traceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.Trace.Builder getTraceBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTraceFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.TraceOrBuilder getTraceOrBuilder() {
        if (traceBuilder_ != null) {
          return traceBuilder_.getMessageOrBuilder();
        } else {
          return trace_;
        }
      }
      /**
       * <code>optional .se.lth.immun.protocol.Trace trace = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          se.lth.immun.protocol.ChromatogramProto.Trace, se.lth.immun.protocol.ChromatogramProto.Trace.Builder, se.lth.immun.protocol.ChromatogramProto.TraceOrBuilder> 
          getTraceFieldBuilder() {
        if (traceBuilder_ == null) {
          traceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              se.lth.immun.protocol.ChromatogramProto.Trace, se.lth.immun.protocol.ChromatogramProto.Trace.Builder, se.lth.immun.protocol.ChromatogramProto.TraceOrBuilder>(
                  getTrace(),
                  getParentForChildren(),
                  isClean());
          trace_ = null;
        }
        return traceBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:se.lth.immun.protocol.FragmentTrace)
    }

    static {
      defaultInstance = new FragmentTrace(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:se.lth.immun.protocol.FragmentTrace)
  }

  public interface SendTraceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:se.lth.immun.protocol.SendTrace)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
     */
    java.util.List<se.lth.immun.protocol.ChromatogramProto.PrecursorTrace> 
        getPrecursorList();
    /**
     * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
     */
    se.lth.immun.protocol.ChromatogramProto.PrecursorTrace getPrecursor(int index);
    /**
     * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
     */
    int getPrecursorCount();
    /**
     * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
     */
    java.util.List<? extends se.lth.immun.protocol.ChromatogramProto.PrecursorTraceOrBuilder> 
        getPrecursorOrBuilderList();
    /**
     * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
     */
    se.lth.immun.protocol.ChromatogramProto.PrecursorTraceOrBuilder getPrecursorOrBuilder(
        int index);

    /**
     * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
     */
    java.util.List<se.lth.immun.protocol.ChromatogramProto.FragmentTrace> 
        getFragmentList();
    /**
     * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
     */
    se.lth.immun.protocol.ChromatogramProto.FragmentTrace getFragment(int index);
    /**
     * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
     */
    int getFragmentCount();
    /**
     * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
     */
    java.util.List<? extends se.lth.immun.protocol.ChromatogramProto.FragmentTraceOrBuilder> 
        getFragmentOrBuilderList();
    /**
     * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
     */
    se.lth.immun.protocol.ChromatogramProto.FragmentTraceOrBuilder getFragmentOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code se.lth.immun.protocol.SendTrace}
   */
  public static final class SendTrace extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:se.lth.immun.protocol.SendTrace)
      SendTraceOrBuilder {
    // Use SendTrace.newBuilder() to construct.
    private SendTrace(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SendTrace(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SendTrace defaultInstance;
    public static SendTrace getDefaultInstance() {
      return defaultInstance;
    }

    public SendTrace getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SendTrace(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                precursor_ = new java.util.ArrayList<se.lth.immun.protocol.ChromatogramProto.PrecursorTrace>();
                mutable_bitField0_ |= 0x00000001;
              }
              precursor_.add(input.readMessage(se.lth.immun.protocol.ChromatogramProto.PrecursorTrace.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                fragment_ = new java.util.ArrayList<se.lth.immun.protocol.ChromatogramProto.FragmentTrace>();
                mutable_bitField0_ |= 0x00000002;
              }
              fragment_.add(input.readMessage(se.lth.immun.protocol.ChromatogramProto.FragmentTrace.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          precursor_ = java.util.Collections.unmodifiableList(precursor_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          fragment_ = java.util.Collections.unmodifiableList(fragment_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_SendTrace_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_SendTrace_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              se.lth.immun.protocol.ChromatogramProto.SendTrace.class, se.lth.immun.protocol.ChromatogramProto.SendTrace.Builder.class);
    }

    public static com.google.protobuf.Parser<SendTrace> PARSER =
        new com.google.protobuf.AbstractParser<SendTrace>() {
      public SendTrace parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SendTrace(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SendTrace> getParserForType() {
      return PARSER;
    }

    public static final int PRECURSOR_FIELD_NUMBER = 1;
    private java.util.List<se.lth.immun.protocol.ChromatogramProto.PrecursorTrace> precursor_;
    /**
     * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
     */
    public java.util.List<se.lth.immun.protocol.ChromatogramProto.PrecursorTrace> getPrecursorList() {
      return precursor_;
    }
    /**
     * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
     */
    public java.util.List<? extends se.lth.immun.protocol.ChromatogramProto.PrecursorTraceOrBuilder> 
        getPrecursorOrBuilderList() {
      return precursor_;
    }
    /**
     * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
     */
    public int getPrecursorCount() {
      return precursor_.size();
    }
    /**
     * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
     */
    public se.lth.immun.protocol.ChromatogramProto.PrecursorTrace getPrecursor(int index) {
      return precursor_.get(index);
    }
    /**
     * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
     */
    public se.lth.immun.protocol.ChromatogramProto.PrecursorTraceOrBuilder getPrecursorOrBuilder(
        int index) {
      return precursor_.get(index);
    }

    public static final int FRAGMENT_FIELD_NUMBER = 2;
    private java.util.List<se.lth.immun.protocol.ChromatogramProto.FragmentTrace> fragment_;
    /**
     * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
     */
    public java.util.List<se.lth.immun.protocol.ChromatogramProto.FragmentTrace> getFragmentList() {
      return fragment_;
    }
    /**
     * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
     */
    public java.util.List<? extends se.lth.immun.protocol.ChromatogramProto.FragmentTraceOrBuilder> 
        getFragmentOrBuilderList() {
      return fragment_;
    }
    /**
     * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
     */
    public int getFragmentCount() {
      return fragment_.size();
    }
    /**
     * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
     */
    public se.lth.immun.protocol.ChromatogramProto.FragmentTrace getFragment(int index) {
      return fragment_.get(index);
    }
    /**
     * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
     */
    public se.lth.immun.protocol.ChromatogramProto.FragmentTraceOrBuilder getFragmentOrBuilder(
        int index) {
      return fragment_.get(index);
    }

    private void initFields() {
      precursor_ = java.util.Collections.emptyList();
      fragment_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < precursor_.size(); i++) {
        output.writeMessage(1, precursor_.get(i));
      }
      for (int i = 0; i < fragment_.size(); i++) {
        output.writeMessage(2, fragment_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < precursor_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, precursor_.get(i));
      }
      for (int i = 0; i < fragment_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, fragment_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static se.lth.immun.protocol.ChromatogramProto.SendTrace parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static se.lth.immun.protocol.ChromatogramProto.SendTrace parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.SendTrace parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static se.lth.immun.protocol.ChromatogramProto.SendTrace parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.SendTrace parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static se.lth.immun.protocol.ChromatogramProto.SendTrace parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.SendTrace parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static se.lth.immun.protocol.ChromatogramProto.SendTrace parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.SendTrace parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static se.lth.immun.protocol.ChromatogramProto.SendTrace parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.lth.immun.protocol.ChromatogramProto.SendTrace prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code se.lth.immun.protocol.SendTrace}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:se.lth.immun.protocol.SendTrace)
        se.lth.immun.protocol.ChromatogramProto.SendTraceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_SendTrace_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_SendTrace_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                se.lth.immun.protocol.ChromatogramProto.SendTrace.class, se.lth.immun.protocol.ChromatogramProto.SendTrace.Builder.class);
      }

      // Construct using se.lth.immun.protocol.ChromatogramProto.SendTrace.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPrecursorFieldBuilder();
          getFragmentFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (precursorBuilder_ == null) {
          precursor_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          precursorBuilder_.clear();
        }
        if (fragmentBuilder_ == null) {
          fragment_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          fragmentBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_SendTrace_descriptor;
      }

      public se.lth.immun.protocol.ChromatogramProto.SendTrace getDefaultInstanceForType() {
        return se.lth.immun.protocol.ChromatogramProto.SendTrace.getDefaultInstance();
      }

      public se.lth.immun.protocol.ChromatogramProto.SendTrace build() {
        se.lth.immun.protocol.ChromatogramProto.SendTrace result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public se.lth.immun.protocol.ChromatogramProto.SendTrace buildPartial() {
        se.lth.immun.protocol.ChromatogramProto.SendTrace result = new se.lth.immun.protocol.ChromatogramProto.SendTrace(this);
        int from_bitField0_ = bitField0_;
        if (precursorBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            precursor_ = java.util.Collections.unmodifiableList(precursor_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.precursor_ = precursor_;
        } else {
          result.precursor_ = precursorBuilder_.build();
        }
        if (fragmentBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            fragment_ = java.util.Collections.unmodifiableList(fragment_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.fragment_ = fragment_;
        } else {
          result.fragment_ = fragmentBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.lth.immun.protocol.ChromatogramProto.SendTrace) {
          return mergeFrom((se.lth.immun.protocol.ChromatogramProto.SendTrace)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(se.lth.immun.protocol.ChromatogramProto.SendTrace other) {
        if (other == se.lth.immun.protocol.ChromatogramProto.SendTrace.getDefaultInstance()) return this;
        if (precursorBuilder_ == null) {
          if (!other.precursor_.isEmpty()) {
            if (precursor_.isEmpty()) {
              precursor_ = other.precursor_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePrecursorIsMutable();
              precursor_.addAll(other.precursor_);
            }
            onChanged();
          }
        } else {
          if (!other.precursor_.isEmpty()) {
            if (precursorBuilder_.isEmpty()) {
              precursorBuilder_.dispose();
              precursorBuilder_ = null;
              precursor_ = other.precursor_;
              bitField0_ = (bitField0_ & ~0x00000001);
              precursorBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPrecursorFieldBuilder() : null;
            } else {
              precursorBuilder_.addAllMessages(other.precursor_);
            }
          }
        }
        if (fragmentBuilder_ == null) {
          if (!other.fragment_.isEmpty()) {
            if (fragment_.isEmpty()) {
              fragment_ = other.fragment_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureFragmentIsMutable();
              fragment_.addAll(other.fragment_);
            }
            onChanged();
          }
        } else {
          if (!other.fragment_.isEmpty()) {
            if (fragmentBuilder_.isEmpty()) {
              fragmentBuilder_.dispose();
              fragmentBuilder_ = null;
              fragment_ = other.fragment_;
              bitField0_ = (bitField0_ & ~0x00000002);
              fragmentBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFragmentFieldBuilder() : null;
            } else {
              fragmentBuilder_.addAllMessages(other.fragment_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        se.lth.immun.protocol.ChromatogramProto.SendTrace parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (se.lth.immun.protocol.ChromatogramProto.SendTrace) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<se.lth.immun.protocol.ChromatogramProto.PrecursorTrace> precursor_ =
        java.util.Collections.emptyList();
      private void ensurePrecursorIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          precursor_ = new java.util.ArrayList<se.lth.immun.protocol.ChromatogramProto.PrecursorTrace>(precursor_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          se.lth.immun.protocol.ChromatogramProto.PrecursorTrace, se.lth.immun.protocol.ChromatogramProto.PrecursorTrace.Builder, se.lth.immun.protocol.ChromatogramProto.PrecursorTraceOrBuilder> precursorBuilder_;

      /**
       * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
       */
      public java.util.List<se.lth.immun.protocol.ChromatogramProto.PrecursorTrace> getPrecursorList() {
        if (precursorBuilder_ == null) {
          return java.util.Collections.unmodifiableList(precursor_);
        } else {
          return precursorBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
       */
      public int getPrecursorCount() {
        if (precursorBuilder_ == null) {
          return precursor_.size();
        } else {
          return precursorBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.PrecursorTrace getPrecursor(int index) {
        if (precursorBuilder_ == null) {
          return precursor_.get(index);
        } else {
          return precursorBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
       */
      public Builder setPrecursor(
          int index, se.lth.immun.protocol.ChromatogramProto.PrecursorTrace value) {
        if (precursorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePrecursorIsMutable();
          precursor_.set(index, value);
          onChanged();
        } else {
          precursorBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
       */
      public Builder setPrecursor(
          int index, se.lth.immun.protocol.ChromatogramProto.PrecursorTrace.Builder builderForValue) {
        if (precursorBuilder_ == null) {
          ensurePrecursorIsMutable();
          precursor_.set(index, builderForValue.build());
          onChanged();
        } else {
          precursorBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
       */
      public Builder addPrecursor(se.lth.immun.protocol.ChromatogramProto.PrecursorTrace value) {
        if (precursorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePrecursorIsMutable();
          precursor_.add(value);
          onChanged();
        } else {
          precursorBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
       */
      public Builder addPrecursor(
          int index, se.lth.immun.protocol.ChromatogramProto.PrecursorTrace value) {
        if (precursorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePrecursorIsMutable();
          precursor_.add(index, value);
          onChanged();
        } else {
          precursorBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
       */
      public Builder addPrecursor(
          se.lth.immun.protocol.ChromatogramProto.PrecursorTrace.Builder builderForValue) {
        if (precursorBuilder_ == null) {
          ensurePrecursorIsMutable();
          precursor_.add(builderForValue.build());
          onChanged();
        } else {
          precursorBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
       */
      public Builder addPrecursor(
          int index, se.lth.immun.protocol.ChromatogramProto.PrecursorTrace.Builder builderForValue) {
        if (precursorBuilder_ == null) {
          ensurePrecursorIsMutable();
          precursor_.add(index, builderForValue.build());
          onChanged();
        } else {
          precursorBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
       */
      public Builder addAllPrecursor(
          java.lang.Iterable<? extends se.lth.immun.protocol.ChromatogramProto.PrecursorTrace> values) {
        if (precursorBuilder_ == null) {
          ensurePrecursorIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, precursor_);
          onChanged();
        } else {
          precursorBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
       */
      public Builder clearPrecursor() {
        if (precursorBuilder_ == null) {
          precursor_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          precursorBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
       */
      public Builder removePrecursor(int index) {
        if (precursorBuilder_ == null) {
          ensurePrecursorIsMutable();
          precursor_.remove(index);
          onChanged();
        } else {
          precursorBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.PrecursorTrace.Builder getPrecursorBuilder(
          int index) {
        return getPrecursorFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.PrecursorTraceOrBuilder getPrecursorOrBuilder(
          int index) {
        if (precursorBuilder_ == null) {
          return precursor_.get(index);  } else {
          return precursorBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
       */
      public java.util.List<? extends se.lth.immun.protocol.ChromatogramProto.PrecursorTraceOrBuilder> 
           getPrecursorOrBuilderList() {
        if (precursorBuilder_ != null) {
          return precursorBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(precursor_);
        }
      }
      /**
       * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.PrecursorTrace.Builder addPrecursorBuilder() {
        return getPrecursorFieldBuilder().addBuilder(
            se.lth.immun.protocol.ChromatogramProto.PrecursorTrace.getDefaultInstance());
      }
      /**
       * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.PrecursorTrace.Builder addPrecursorBuilder(
          int index) {
        return getPrecursorFieldBuilder().addBuilder(
            index, se.lth.immun.protocol.ChromatogramProto.PrecursorTrace.getDefaultInstance());
      }
      /**
       * <code>repeated .se.lth.immun.protocol.PrecursorTrace precursor = 1;</code>
       */
      public java.util.List<se.lth.immun.protocol.ChromatogramProto.PrecursorTrace.Builder> 
           getPrecursorBuilderList() {
        return getPrecursorFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          se.lth.immun.protocol.ChromatogramProto.PrecursorTrace, se.lth.immun.protocol.ChromatogramProto.PrecursorTrace.Builder, se.lth.immun.protocol.ChromatogramProto.PrecursorTraceOrBuilder> 
          getPrecursorFieldBuilder() {
        if (precursorBuilder_ == null) {
          precursorBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              se.lth.immun.protocol.ChromatogramProto.PrecursorTrace, se.lth.immun.protocol.ChromatogramProto.PrecursorTrace.Builder, se.lth.immun.protocol.ChromatogramProto.PrecursorTraceOrBuilder>(
                  precursor_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          precursor_ = null;
        }
        return precursorBuilder_;
      }

      private java.util.List<se.lth.immun.protocol.ChromatogramProto.FragmentTrace> fragment_ =
        java.util.Collections.emptyList();
      private void ensureFragmentIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          fragment_ = new java.util.ArrayList<se.lth.immun.protocol.ChromatogramProto.FragmentTrace>(fragment_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          se.lth.immun.protocol.ChromatogramProto.FragmentTrace, se.lth.immun.protocol.ChromatogramProto.FragmentTrace.Builder, se.lth.immun.protocol.ChromatogramProto.FragmentTraceOrBuilder> fragmentBuilder_;

      /**
       * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
       */
      public java.util.List<se.lth.immun.protocol.ChromatogramProto.FragmentTrace> getFragmentList() {
        if (fragmentBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fragment_);
        } else {
          return fragmentBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
       */
      public int getFragmentCount() {
        if (fragmentBuilder_ == null) {
          return fragment_.size();
        } else {
          return fragmentBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.FragmentTrace getFragment(int index) {
        if (fragmentBuilder_ == null) {
          return fragment_.get(index);
        } else {
          return fragmentBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
       */
      public Builder setFragment(
          int index, se.lth.immun.protocol.ChromatogramProto.FragmentTrace value) {
        if (fragmentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFragmentIsMutable();
          fragment_.set(index, value);
          onChanged();
        } else {
          fragmentBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
       */
      public Builder setFragment(
          int index, se.lth.immun.protocol.ChromatogramProto.FragmentTrace.Builder builderForValue) {
        if (fragmentBuilder_ == null) {
          ensureFragmentIsMutable();
          fragment_.set(index, builderForValue.build());
          onChanged();
        } else {
          fragmentBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
       */
      public Builder addFragment(se.lth.immun.protocol.ChromatogramProto.FragmentTrace value) {
        if (fragmentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFragmentIsMutable();
          fragment_.add(value);
          onChanged();
        } else {
          fragmentBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
       */
      public Builder addFragment(
          int index, se.lth.immun.protocol.ChromatogramProto.FragmentTrace value) {
        if (fragmentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFragmentIsMutable();
          fragment_.add(index, value);
          onChanged();
        } else {
          fragmentBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
       */
      public Builder addFragment(
          se.lth.immun.protocol.ChromatogramProto.FragmentTrace.Builder builderForValue) {
        if (fragmentBuilder_ == null) {
          ensureFragmentIsMutable();
          fragment_.add(builderForValue.build());
          onChanged();
        } else {
          fragmentBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
       */
      public Builder addFragment(
          int index, se.lth.immun.protocol.ChromatogramProto.FragmentTrace.Builder builderForValue) {
        if (fragmentBuilder_ == null) {
          ensureFragmentIsMutable();
          fragment_.add(index, builderForValue.build());
          onChanged();
        } else {
          fragmentBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
       */
      public Builder addAllFragment(
          java.lang.Iterable<? extends se.lth.immun.protocol.ChromatogramProto.FragmentTrace> values) {
        if (fragmentBuilder_ == null) {
          ensureFragmentIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fragment_);
          onChanged();
        } else {
          fragmentBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
       */
      public Builder clearFragment() {
        if (fragmentBuilder_ == null) {
          fragment_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          fragmentBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
       */
      public Builder removeFragment(int index) {
        if (fragmentBuilder_ == null) {
          ensureFragmentIsMutable();
          fragment_.remove(index);
          onChanged();
        } else {
          fragmentBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.FragmentTrace.Builder getFragmentBuilder(
          int index) {
        return getFragmentFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.FragmentTraceOrBuilder getFragmentOrBuilder(
          int index) {
        if (fragmentBuilder_ == null) {
          return fragment_.get(index);  } else {
          return fragmentBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
       */
      public java.util.List<? extends se.lth.immun.protocol.ChromatogramProto.FragmentTraceOrBuilder> 
           getFragmentOrBuilderList() {
        if (fragmentBuilder_ != null) {
          return fragmentBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fragment_);
        }
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.FragmentTrace.Builder addFragmentBuilder() {
        return getFragmentFieldBuilder().addBuilder(
            se.lth.immun.protocol.ChromatogramProto.FragmentTrace.getDefaultInstance());
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
       */
      public se.lth.immun.protocol.ChromatogramProto.FragmentTrace.Builder addFragmentBuilder(
          int index) {
        return getFragmentFieldBuilder().addBuilder(
            index, se.lth.immun.protocol.ChromatogramProto.FragmentTrace.getDefaultInstance());
      }
      /**
       * <code>repeated .se.lth.immun.protocol.FragmentTrace fragment = 2;</code>
       */
      public java.util.List<se.lth.immun.protocol.ChromatogramProto.FragmentTrace.Builder> 
           getFragmentBuilderList() {
        return getFragmentFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          se.lth.immun.protocol.ChromatogramProto.FragmentTrace, se.lth.immun.protocol.ChromatogramProto.FragmentTrace.Builder, se.lth.immun.protocol.ChromatogramProto.FragmentTraceOrBuilder> 
          getFragmentFieldBuilder() {
        if (fragmentBuilder_ == null) {
          fragmentBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              se.lth.immun.protocol.ChromatogramProto.FragmentTrace, se.lth.immun.protocol.ChromatogramProto.FragmentTrace.Builder, se.lth.immun.protocol.ChromatogramProto.FragmentTraceOrBuilder>(
                  fragment_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          fragment_ = null;
        }
        return fragmentBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:se.lth.immun.protocol.SendTrace)
    }

    static {
      defaultInstance = new SendTrace(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:se.lth.immun.protocol.SendTrace)
  }

  public interface WrapperOrBuilder extends
      // @@protoc_insertion_point(interface_extends:se.lth.immun.protocol.Wrapper)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code se.lth.immun.protocol.Wrapper}
   */
  public static final class Wrapper extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:se.lth.immun.protocol.Wrapper)
      WrapperOrBuilder {
    // Use Wrapper.newBuilder() to construct.
    private Wrapper(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Wrapper(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Wrapper defaultInstance;
    public static Wrapper getDefaultInstance() {
      return defaultInstance;
    }

    public Wrapper getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Wrapper(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_Wrapper_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_Wrapper_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              se.lth.immun.protocol.ChromatogramProto.Wrapper.class, se.lth.immun.protocol.ChromatogramProto.Wrapper.Builder.class);
    }

    public static com.google.protobuf.Parser<Wrapper> PARSER =
        new com.google.protobuf.AbstractParser<Wrapper>() {
      public Wrapper parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Wrapper(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Wrapper> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static se.lth.immun.protocol.ChromatogramProto.Wrapper parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static se.lth.immun.protocol.ChromatogramProto.Wrapper parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.Wrapper parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static se.lth.immun.protocol.ChromatogramProto.Wrapper parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.Wrapper parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static se.lth.immun.protocol.ChromatogramProto.Wrapper parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.Wrapper parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static se.lth.immun.protocol.ChromatogramProto.Wrapper parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static se.lth.immun.protocol.ChromatogramProto.Wrapper parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static se.lth.immun.protocol.ChromatogramProto.Wrapper parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.lth.immun.protocol.ChromatogramProto.Wrapper prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code se.lth.immun.protocol.Wrapper}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:se.lth.immun.protocol.Wrapper)
        se.lth.immun.protocol.ChromatogramProto.WrapperOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_Wrapper_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_Wrapper_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                se.lth.immun.protocol.ChromatogramProto.Wrapper.class, se.lth.immun.protocol.ChromatogramProto.Wrapper.Builder.class);
      }

      // Construct using se.lth.immun.protocol.ChromatogramProto.Wrapper.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.lth.immun.protocol.ChromatogramProto.internal_static_se_lth_immun_protocol_Wrapper_descriptor;
      }

      public se.lth.immun.protocol.ChromatogramProto.Wrapper getDefaultInstanceForType() {
        return se.lth.immun.protocol.ChromatogramProto.Wrapper.getDefaultInstance();
      }

      public se.lth.immun.protocol.ChromatogramProto.Wrapper build() {
        se.lth.immun.protocol.ChromatogramProto.Wrapper result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public se.lth.immun.protocol.ChromatogramProto.Wrapper buildPartial() {
        se.lth.immun.protocol.ChromatogramProto.Wrapper result = new se.lth.immun.protocol.ChromatogramProto.Wrapper(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.lth.immun.protocol.ChromatogramProto.Wrapper) {
          return mergeFrom((se.lth.immun.protocol.ChromatogramProto.Wrapper)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(se.lth.immun.protocol.ChromatogramProto.Wrapper other) {
        if (other == se.lth.immun.protocol.ChromatogramProto.Wrapper.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        se.lth.immun.protocol.ChromatogramProto.Wrapper parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (se.lth.immun.protocol.ChromatogramProto.Wrapper) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:se.lth.immun.protocol.Wrapper)
    }

    static {
      defaultInstance = new Wrapper(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:se.lth.immun.protocol.Wrapper)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_se_lth_immun_protocol_Bounds_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_lth_immun_protocol_Bounds_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_se_lth_immun_protocol_FragmentBounds_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_lth_immun_protocol_FragmentBounds_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_se_lth_immun_protocol_SendCoordinates_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_lth_immun_protocol_SendCoordinates_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_se_lth_immun_protocol_Trace_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_lth_immun_protocol_Trace_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_se_lth_immun_protocol_PrecursorTrace_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_lth_immun_protocol_PrecursorTrace_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_se_lth_immun_protocol_FragmentTrace_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_lth_immun_protocol_FragmentTrace_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_se_lth_immun_protocol_SendTrace_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_lth_immun_protocol_SendTrace_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_se_lth_immun_protocol_Wrapper_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_lth_immun_protocol_Wrapper_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rpanther.proto\022\025se.lth.immun.protocol\"\"" +
      "\n\006Bounds\022\013\n\003lmz\030\001 \001(\001\022\013\n\003hmz\030\002 \001(\001\"s\n\016Fr" +
      "agmentBounds\0220\n\tprecursor\030\001 \001(\0132\035.se.lth" +
      ".immun.protocol.Bounds\022/\n\010fragment\030\002 \001(\013" +
      "2\035.se.lth.immun.protocol.Bounds\"\210\001\n\017Send" +
      "Coordinates\022\n\n\002id\030\001 \001(\005\0220\n\tprecursor\030\002 \003" +
      "(\0132\035.se.lth.immun.protocol.Bounds\0227\n\010fra" +
      "gment\030\003 \003(\0132%.se.lth.immun.protocol.Frag" +
      "mentBounds\"(\n\005Trace\022\014\n\004time\030\001 \003(\001\022\021\n\tint" +
      "ensity\030\002 \003(\001\"o\n\016PrecursorTrace\0220\n\tprecur",
      "sor\030\001 \001(\0132\035.se.lth.immun.protocol.Bounds" +
      "\022+\n\005trace\030\002 \001(\0132\034.se.lth.immun.protocol." +
      "Trace\"u\n\rFragmentTrace\0227\n\010fragment\030\001 \001(\013" +
      "2%.se.lth.immun.protocol.FragmentBounds\022" +
      "+\n\005trace\030\002 \001(\0132\034.se.lth.immun.protocol.T" +
      "race\"}\n\tSendTrace\0228\n\tprecursor\030\001 \003(\0132%.s" +
      "e.lth.immun.protocol.PrecursorTrace\0226\n\010f" +
      "ragment\030\002 \003(\0132$.se.lth.immun.protocol.Fr" +
      "agmentTrace\"\t\n\007WrapperB*\n\025se.lth.immun.p" +
      "rotocolB\021ChromatogramProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_se_lth_immun_protocol_Bounds_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_se_lth_immun_protocol_Bounds_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_se_lth_immun_protocol_Bounds_descriptor,
        new java.lang.String[] { "Lmz", "Hmz", });
    internal_static_se_lth_immun_protocol_FragmentBounds_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_se_lth_immun_protocol_FragmentBounds_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_se_lth_immun_protocol_FragmentBounds_descriptor,
        new java.lang.String[] { "Precursor", "Fragment", });
    internal_static_se_lth_immun_protocol_SendCoordinates_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_se_lth_immun_protocol_SendCoordinates_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_se_lth_immun_protocol_SendCoordinates_descriptor,
        new java.lang.String[] { "Id", "Precursor", "Fragment", });
    internal_static_se_lth_immun_protocol_Trace_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_se_lth_immun_protocol_Trace_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_se_lth_immun_protocol_Trace_descriptor,
        new java.lang.String[] { "Time", "Intensity", });
    internal_static_se_lth_immun_protocol_PrecursorTrace_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_se_lth_immun_protocol_PrecursorTrace_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_se_lth_immun_protocol_PrecursorTrace_descriptor,
        new java.lang.String[] { "Precursor", "Trace", });
    internal_static_se_lth_immun_protocol_FragmentTrace_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_se_lth_immun_protocol_FragmentTrace_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_se_lth_immun_protocol_FragmentTrace_descriptor,
        new java.lang.String[] { "Fragment", "Trace", });
    internal_static_se_lth_immun_protocol_SendTrace_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_se_lth_immun_protocol_SendTrace_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_se_lth_immun_protocol_SendTrace_descriptor,
        new java.lang.String[] { "Precursor", "Fragment", });
    internal_static_se_lth_immun_protocol_Wrapper_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_se_lth_immun_protocol_Wrapper_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_se_lth_immun_protocol_Wrapper_descriptor,
        new java.lang.String[] { });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
